/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package u20734621;

import com.mongodb.*;
import java.util.Set;

/**
 *
 * @author matth
 */
public class u20374621_form extends javax.swing.JFrame {
    
    private static MongoClient mongoClient;
    private static DB database;
    private static DBCollection collectionMessages;
    private static DBCollection collectionFacebook;

    /**
     * Creates new form u20374621_form
     */
    public u20374621_form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGetCollectionNames = new javax.swing.JButton();
        btnGetArrayDocs = new javax.swing.JButton();
        btnCount = new javax.swing.JButton();
        btnCountSpring = new javax.swing.JButton();
        jOutput = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnGetCollectionNames.setText("Get Collection Names");
        btnGetCollectionNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetCollectionNamesActionPerformed(evt);
            }
        });

        btnGetArrayDocs.setText("Get Array Docs");
        btnGetArrayDocs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetArrayDocsActionPerformed(evt);
            }
        });

        btnCount.setText("Count");
        btnCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCountActionPerformed(evt);
            }
        });

        btnCountSpring.setText("Count Spring");
        btnCountSpring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCountSpringActionPerformed(evt);
            }
        });

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jOutput.setViewportView(txtOutput);

        jButton1.setText("populate table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGetCollectionNames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGetArrayDocs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCountSpring, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGetCollectionNames)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGetArrayDocs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCountSpring)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetCollectionNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetCollectionNamesActionPerformed
        // TODO add your handling code here:
        txtOutput.setText("");
        Set<String> names = database.getCollectionNames();
        String output = "Collections:\n";
        for (String name : names) {
            output += name + "\n";
        }
        txtOutput.setText(output);
    }//GEN-LAST:event_btnGetCollectionNamesActionPerformed

    private void btnGetArrayDocsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetArrayDocsActionPerformed
        txtOutput.setText("");
        collectionFacebook = database.getCollection("facebook");
        DBCursor docs = collectionFacebook.find();
        String output = "";
        while (docs.hasNext()) {
            DBObject obj = docs.next();
            String data = obj.get("data").toString();
            output += data;
        }
        txtOutput.setText("facebook collection:\n" + format(output, 4));
    }//GEN-LAST:event_btnGetArrayDocsActionPerformed

    
       // TODO add your handling code here:

    
    private void btnCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCountActionPerformed
        // TODO add your handling code here:        txtOutput.setText("");
        txtOutput.setText("");
        collectionFacebook = database.getCollection("facebook");
        DBCursor docs = collectionFacebook.find();
        int count = 0;
        while (docs.hasNext()) {
            DBObject theObj = docs.next();
            BasicDBList ls = (BasicDBList) theObj.get("data");
            count = ls.size();  
        }
        txtOutput.setText("Count of messages: \n" + count);
        
    }//GEN-LAST:event_btnCountActionPerformed

    private void btnCountSpringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCountSpringActionPerformed
        // TODO add your handling code here:
        txtOutput.setText("");
        collectionFacebook = database.getCollection("facebook");
        DBCursor docs = collectionFacebook.find();
        int count = 0;
        while (docs.hasNext()) {
            DBObject theObj = docs.next();
            BasicDBList ls = (BasicDBList) theObj.get("data");
            for (int i = 0; i < ls.size(); i++) {
                BasicDBObject message = (BasicDBObject) ls.get(i);
                String target = message.toString();
                if (target.contains("spring")|| target.contains("September"))
                    count++;
            }
        }
        txtOutput.setText("Count of messages with \"spring\" or \"September\": \n" + count);
    }//GEN-LAST:event_btnCountSpringActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                populateMessageCollection();

    }//GEN-LAST:event_jButton1ActionPerformed
        
    public static void populateMessageCollection() {
        collectionFacebook = database.getCollection("facebook");
        DBCursor docs = collectionFacebook.find();
        while (docs.hasNext()) {
            DBObject theObj = docs.next();
            BasicDBList ls = (BasicDBList) theObj.get("data");
            for (int i = 0; i < ls.size(); i++) {
                BasicDBObject doc = (BasicDBObject) ls.get(i);
                String from = doc.getString("from");
                String message = doc.getString("message");
                DBObject object = new BasicDBObject()
                        .append("from", from)
                        .append("message", message);
                collectionMessages.insert(object);
            }
        }
    }
    
    //JSON FORMATTER
    public static String format(final String json_str, final int indent_width) {
        final char[] chars = json_str.toCharArray();
        final String newline = System.lineSeparator();

        String ret = "";
        boolean begin_quotes = false;

        for (int i = 0, indent = 0; i < chars.length; i++) {
            char c = chars[i];

            if (c == '\"') {
                ret += c;
                begin_quotes = !begin_quotes;
                continue;
            }

            if (!begin_quotes) {
                switch (c ) {
                    case '{':
                    case '[':
                        ret += c + newline + String.format("%" + (indent += indent_width) + "s", "");
                        continue;
                    case '}':
                    case ']':
                        ret += newline + ((indent -= indent_width) > 0 ? String.format("%" + indent + "s", "") : "") + c;
                        continue;
                    case ':':
                        ret += c + " ";
                        continue;
                    case ',':
                        ret += c + newline + (indent > 0 ? String.format("%" + indent + "s", "") : "");
                        continue;
                    default:
                        if (Character.isWhitespace(c)) continue;
                }
            }
            ret += c + (c == '\\' ? "" + chars[++i] : "");
        }
        return ret;
    }
    ///
    
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(u20374621_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(u20374621_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(u20374621_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(u20374621_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new u20374621_form().setVisible(true);
            }
        });
        
        //MAIN CODE
        mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
        database = mongoClient.getDB("prac9db");
        collectionMessages = database.getCollection("messages");
        collectionFacebook = database.getCollection("facebook");

//        DBCursor res = collectionMessages.find();
//        while (res.hasNext()) {
//            DBObject object = new BasicDBObject()
//                    .append("from", res.next().get("from"))
//                    .append("message", res.next().get("message"));
//            collectionMessages.insert(object);
//        } 
        


    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCount;
    private javax.swing.JButton btnCountSpring;
    private javax.swing.JButton btnGetArrayDocs;
    private javax.swing.JButton btnGetCollectionNames;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jOutput;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
